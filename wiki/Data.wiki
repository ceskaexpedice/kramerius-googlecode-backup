#summary Datový model
#sidebar FunkcniPozadavky
<wiki:toc max_depth="1" />

Kramerius 4 používá zobecněný datový model vycházející z návrhu společnosti Qbizm vytvořeném v rámci proof of concept převodu dat ze struktury Kramerius 3 do úložiště Fedora.  


=Identifikátor digitálních objektů=
Každý digitální objekt systému Kramerius 4 má jednoznačný identifikátor UUID, generovaný stejným algoritmem, který byl použit v systému Kramerius 3, doplněný prefixem uuid:

_TODO:_ Je třeba vyjasnit požadavky na použití identifikátorů založených na SIGLA a číslech zakázek. Rovněž je třeba přesně specifikovat požadavky na funkcionalitu persistentních identifikátorů  handle. Tyto informace je možné uchovávat v poli AlternateIDs.  

=Datové streamy=
Objekty používají datové streamy navržené v rámci POC, povinné streamy jsou DC, BIBLIO_MODS a RELS_EXT. 

Objekty, které obsahují binární stream IMG_FULL s obrázkem v plném rozlišení, jsou oproti POC rozšířeny o další binární stream IMG_THUMB s náhledem obrázku (ve formátu JPG s nízkým rozlišením) pro zobrazení v souhrnných přehledech.

Další rozšíření oproti POC je standardní datový stream POLICY, který obsahuje přístupová  práva ve formátu XACML - použit pouze u objektů s omezeným přístupem.

=Rozšiřování modelu o nové typy dokumentů=
Digitální objekty v systému Kramerius 4 tvoří obecnou stromovou strukturu s vazbami definovanými  pomocí RDF vazeb, které jsou potomky vazeb fedora:hasPart a fedora:isPartOf. 

Systém lze libovolně rozšiřovat o nové typy objektů přidáním příslušného objektu cmodel s povinnými datovými streamy DC, BIBLIO_MODS a RELS_EXT.   

Paralelně s určením typu dokumentu pomocí RDF vazby na contents model je typ dokumentu uveden i v BIBLIO_MODS v elementu typeOfResource. Stávající implementace konvertoru zde vyplňuje hodnotu "text", bude změněno. TypeOfResource označuje typ dokumentu z bibliografického hlediska, nemusí být vždy identický s přiřazeným cmodelem.