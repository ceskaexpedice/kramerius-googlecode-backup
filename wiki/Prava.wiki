#summary Článek popisující koncept práv systému kramerius.
<wiki:toc max_depth="2" />

= Úvod =

Práva systému Kramerius 4  jsou na rozdíl od bibliografických dat ukládána v servisní 
databázi postgres, ve stejném tabulkovém prostoru jako například tabulky pro správu 
procesů. Datový model zobrazený formou UML diagramu tříd vypadá následovně:

http://kramerius.googlecode.com/svn/wiki/rights/prava-wiki-secversion.png

Právo je v databázi vyjádřeno jako  vazba mezi rolí, akcí a 
chráněným objektem. Vazba může být dál “obohacena” o dodatečnou podmínku a parametry dodatečné podmínky. 

Pokud je vazba bez dodatečné podmínky lze to interpretovat následovně: 

*Uživatel s danou rolí má právo provádět akci nad chráněným objektem.* 

Pokud je zde ještě vazba na dodatečnou podmínku, lze to interpretovat jako:

 
*Uživatel s danou rolí má právo provádět akci nad chráněným objektem ale pouze za určitých podmínek.* 

Dále popíšu jednotlivé aktéry vazby.


=Akce=

Akce zde reprezentuje formálně zapsanou opraci, kterou uživatel provadí. Krameriem definované akce jsou následující: 

 # *read* - Akce čti definuje operaci číst data (obrázky). _Pokud má uživatel práva tuto akci provádět, objeví se mu  velký náhled, vygeneruje PDF nebo zobrazí deepZoom prohlížečka._
 # *import* - [MenuAdministrace#Import_dat Import dat]  
 # *reindex* - [MenuAdministrace#Indexace_dokument%C5%AF Indexace].
 # *convert* - [MenuAdministrace#Manu%C3%A1ln%C3%AD_import_dokument%C5%AF_ve_form%C3%A1tu_DTD_Krameria_3 Manuální import dokumentů ve formátu DTD Krameria 3]
 # *replicationrights* - n
 # *enumerator* - [MenuAdministrace#Ur%C4%8Den%C3%AD_titul%C5%AF_pro_replikaci Určení titulů pro replikaci]
 # *replikator_periodicals* - [MenuAdministrace#Import_dat Import dat]
 # *replikator_monographs* - [MenuAdministrace#Import_dat Import dat]
 # *delete* - Akce definuje opraci mazání dat z repository nebo indexu. _Uživatel může  pomocí příslušné nabídky v kontextovém menu objekt smazat._
 # *export* - Akce definuje spuštění statického exportu. _Uživatel může provádět statický export do PDF._
 # *setprivate, setpublic* - Akce definuje opraci změna příznaku veřejnosti nebo neveřejnosti dokumentu.  _Uživatel může přes kontextové menu měnit příznak._ 
 # *administrate* - Akce definuje opraci administraci práv k danému objektu. _Uživatel může měnit práva k danému objektu. Pokud je chráněný objekt celé repository objeví se příslušná položka v administrátorském menu v opačném případě se objeví položka pouze v menu kontextovém._ 
 # *editor*  - Akce spouštět metadata editor. _Uživatel může spouštět metadata editor._
 # *usersadmin*  - Akce spouštět editor uživatelů  v superadmin módu (viz dále). _Uživatel může přes administrátorské menu spouštět editor uživatelů._ 
 # *userssubadmin* - Akce spouštět editor v subadmin modu (viz dale).  _Uživatel může přes administrátorské menu spouštět editor uživatelů._

 # *virtualcollection_manage* - Akce správa virtuálních sbírek. _Uživatel může přes spravovat virtuální sbírky._

 # *display_admin_menu* - Akce zobrazení menu určeného pro administrátory. _Uživateli se zobrazí menu určené pro administrátory._



=Uživatelské role=

Každý přihlášený uživatel figuruje v jedné nebo více rolích. Vazby uživatele a role jsou definovány buď v editoru uživatelů (TODO:odkaz) a nebo mapujícím [Shibb#Nastaven%C3%AD_aplikace souborem]. V případě uživatelů autentizujicích pomocí protokolu shibboleth.

Standardně K4 definuje následující role:

 # *k4_admins* - Administrátorská role.  Standardně opravňuje ke všem administrátorským úkonům. 
 # *common_users* - Reprezentuje všechny uživatele. 
 


=Chráněný objekt=

Chráněný objekt reprezentuje entitu, na kterou je akce aplikována. Většinou se jedná o součást repositáře 
fedory (Monografie, Periodikum, Ročník, Výtisk, Stránka...) případně se může jednat o celý repositář (objekt REPOSITORY). 

===Dědičnost objektů===

Jednotlivé objekty jsou spolu spojeny vazbami a vytváří strom. Systém práv respektuje dědičnost mezi objekty a právo, které je definované na vyšší úrovni, je platné i pro úrovně nižší. Interpretace jde vždy odspodu (od listů) až po vrchní objekt REPOSITORY. 

Příklad hierarchie: 

http://kramerius.googlecode.com/svn/wiki/rights/fedora-obj-tree.png
  

Tedy pro příklad, pokud má systém zkoumat zda má uživatel právo na čtení dat pro určitou stránku periodika, nejdřív zkoumá zda není právo nadefinováno přímo na stránce, pokud není (nebo je ale nemohlo rozhodnout), pak se přejde o úroveň výš a to opakuje dokud systém nerozhodne nebo neskončí na nejvyšším objektu.


=Dodatečná podmínka a parametry podmínky=

Dodatečná podmínka umožňuje rozhodovat na základě dalších dodatečných kritérií, které jsou známy 
až  při běhu programu (IP adresa, metadata objektu atd..).  Podmínka 
může být definována třídou nebo skriptem. Výsledek vyhodnocení podmínky může mít tři stavy *ANO*, *NE* a *NEVÍM*, kde 
třetí stav nevím se aplikuje v případě, že dodatečná podmínka není schopna rozhodnout a ponechává 
rozhodnutí na "vyšší instanci".   

Parametry podmínky jsou další potřebné informace pro vyhodnocení pomdmínky. Parametry jsou uživatelsky 
definované.

==Modelový příklad==

http://kramerius.googlecode.com/svn/wiki/rights/prava-scenardefault.png


Obrázek je pořízen z administrátorského rozhraní krameria. Jsou na něm vidět nadefinovaná práva 
pro objekt REPOSITORY a akci ČÍST - read. 

 # První definice říká, že uživatelé role k4_admins mohou číst data z aplikace bez jakýchkoliv dalších podmínek. 
 # Druhá definice zaručuje právo čtení pro uživatele přicházející z adres 194.XXX.XXX.XXX nebo 84.XXX.XXX.XXX. Jedná se o tzv. benevolentní filtr. Ten nerozhoduje záporně pouze rohodne stavem NEVIM, čímž předá řízení dalšímu pravidlu v pořadí.
 # Poslední pravidlo rozhoduje na základě metadat. Pokud má dotazovaný objekt v metadatech řečeno, že je veřejný, povolí jeho zobrazení.  V opačném případě zobrazení dokumentu zakáže.
 

==Krameriem definované dodatečné podmínky==

 # *Pohyblivá zeď* - Podmínka rozhodne stavy ANO nebo NE. Zkoumá metadata dotazovaného objektu, konkrětně rok vydání a dle něj rozhodne. Jako parametr podmínka očekává mezní rok.       
 # *Příznak kramerius:policy* - Podmínka rozhodne stavy ANO nebo NE. Zkoumá metadata dotazovaného objektu a rozhoduje se podle příznaku kramerius:policy. Pokud obsahuje literal policy:private, pak se jedná o neveřejný dokument, v opačném případě o veřejný.
 # *IP Filter benevolentní* - Benevolentní filter rozhodne stavy ANO nebo NEVIM. Zkoumá IP adresy návštěvníků. Jako parametry očekává regulární výrazy oddělěné středníkem. Pokud některá z IP adres vyhovuje některému z patternů zapsaném v parametrech práva,  vrací stav ANO, v opačném případě vrací stav NEVIM. 
 # *IP Filter skriktní*  - Podmínka má stejnou logiku jako ta předchozí  s tím, že rozhodováné stavy ANO nebo NE. Buď povolí přístup nebo zakáže.
 

=Řazení pravidel=

Před rozhodováním, které pravidlo se uplatní, dochází nejdřív k jejich seřazení.  
Řazení se řídí dvěma principy: Prioritizace a dědičnost. Prioritizaci může uživatel ovlivnit při vytváření či editaci pravidla, dědičnost je pak určena strukturou dat. 

Standardně se řazení před vykonáním provádí v následujících krocích:

 # Seřadí se všechna pravidla, která obsahují prioritu. (Priorita 1 má nenižší váhu, priorita 2 vyšší, atd..) 
 # Seřadí se pravidla dle principu dědičnosti. (Pravidla blíž listu stromu má výšší váhu, směrem ke kořenu se pak váha snižuje)

Pořadí vykonávání si může administrátor zkontrolovat v dialogu práv. Zde platí, čím výš je pravidlo tím dřív se aplikuje. 


==Priorita pravidel==
Priorita může nabývat hodnot 1 až max(int)=2^32^-1. Čím vyšší priorita, tím dřív se uplatní. Pokud se střetnou dvě pravidla se stejnou prioritou pak platí, že výš je to co bylo později vytvořeno.  

Poznámka: Použití priority by se mělo využívat až v krajních případech, kdy z nějakého důvodu není vhodné aby systém reflektoval dědičnost. 

  
=Příklady nastavení krameria=
V další části uvedu pár příkladů nastavení krameria. 

  
===Pohyblivá zeď===
Rohoduje na základě metadat a konfigurace roku, která je uvedena jako parametr dodatečné podmínky. Zde je zobrazaná tabulka práv pro 
periodikum Tramp.  

http://kramerius.googlecode.com/svn/wiki/rights/prava-scenarmw.png  

Z obrázku je patrno, že je podmínka pohyblivé zdi nastavena na dvou úrovních. Na celém repositáři kde je nastaven mezní rok 1910 a na 
samotném titulu je podmínka předefinována na mezní rok 1930.
 

===Předplatitelé===
Podmínku předplatitelů určitého ročníku periodika lze vyjádřit jako vazbu speciálně definované skupiny uživatelů (PREDPLATITELE_1996) a 
ročníku, kterého se toto právo dotýká. Zde není potřeba žádné dodatečné podmínky. 

http://kramerius.googlecode.com/svn/wiki/rights/prava-scenarpredplatitele.png  
  
===Exkluzivní přistup dle IP address (administrátorské akce)===
Poslední příklad ukazuje způsob jak omezit přístup (např. k administátorským akcím) tím, že je umožníme spouštět jenom 
ze nám známého rozsahu adres. 

http://kramerius.googlecode.com/svn/wiki/rights/prava-scenarexcluisveips.png


[http://code.google.com/p/kramerius/wiki/PravaGUI Popis uživatelského rozhraní]

  