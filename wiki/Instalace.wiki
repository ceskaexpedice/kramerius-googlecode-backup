#summary Popis instalace a nastavení K4
<wiki:toc max_depth="1" />

Před instalací aplikace Kramerius 4 je třeba nainstalovat následující systémové komponenty:

|| Java || JDK 1.6||
|| Aplikační server|| podporující specifikace Servlet 2.5 a JSP 2.1 nebo novější (popsaná ukázková instalace předpokládá použití Apache Tomcat 6)||
|| Databáze||Postgres 8.4 nebo novější||
||Úložiště||Fedora Commons 3.3, 3.4 nebo 3.5|| 

Kramerius 4 nevyžaduje žádné specifické revize uvedených komponent, obecně je rozumné používat jejich pokud možno nejnovější aktualizace. Popis instalace a administrace těchto systémových komponent není součástí této dokumentace, předpokládáme, že administrátor aplikace Kramerius 4 ovládá instalaci a administraci výše uvedených komponent.

Operační systém může být libovolný, na kterém je možno tyto komponenty provozovat, vlastní aplikace Kramerius 4 žádné speciální požadavky na systém nemá. Hardware serveru musí být dimenzován na uvažované množství dat, doporučujeme minimálně dvojnásobnou velikost pevného disku, než je plánovaná velikost obrazových dat. Vzhledem k velké paměťové náročnosti práce s grafickými daty (náhledy stránek, zoomování) je třeba i při minimálním provozu aplikace alespoň 4GB RAM. 

K4 je vhodné nainstalovat pod samostatným uživatelským účtem, například kramerius4.

V produkčním prostředí je před J2EE server (Tomcat) vhodné předřadit webserver přístupný na portu 80, například Apache s nakonfigurovanými moduly mod_proxy a mod_proxy_ajp.

Každou komponentu systému Kramerius (tedy repository Fedora, vlastní aplikaci K4, indexer SOLR, databázi PostgreSQL)  je možné nainstalovat na samostatný server.  


V následujících odstavcích jsou uvedeny požadavky aplikace Kramerius 4 na specifickou konfiguraci systémových komponent, pokud možno i s odkazy na příklady konkrétních úprav příslušných konfiguračních souborů. Tyto příklady jsou uvedeny pouze pro ilustraci jedné z možných konfigurací a nenahrazují dokumentaci k jednotlivým systémovým komponentám. V případě distribuované instalace je třeba uvedené příklady konfiguračních URL (localhost) nahradit adresami příslušných serverů. 

=Operační systém=

  * Nastavit systémovou proměnnou pro instalaci Fedora Commons( `FEDORA_HOME`).
  * Nastavit dodatečné spouštěcí parametry pro aplikační server : `-Djava.awt.headless=true  -Dsolr.solr.home=$FEDORA_HOME/solr -XX:MaxPermSize=128m -Xms512m -Xmx1024m` 


[PrikladKonfigurace#System_Variables Příklad konfigurace systémových proměnných]

(v uvedených příkladech konfigurace předpokládáme instalaci Tomcatu a Fedory do domácího adresáře uživatele kramerius4)

=PostgreSQL=

  * Vytvořit uživatele `fedoraAdmin` a pro něj databáze `fedora3`, `kramerius4` a (při použití implementace Fedora Resource Indexu MPTTripleStore) `riTriples`.


= Fedora Commons =

Nainstalujte úložiště Fedora Commons podle jeho dokumentace.

[PrikladKonfigurace#Fedora Příklad instalace Fedora Commons]

==Nastavení aliasů==

Po instalaci fedory je třeba do souboru `$FEDORA_HOME/server/config/fedora.fcfg` do sekce začínající `<module role="fedora.server.resourceIndex.ResourceIndex" ` přidat následující parametry (definice aliasů pro XML namespace):

{{{
 <param name="alias:kramerius" value="http://www.nsdl.org/ontologies/relationships#">
      <comment>Alias for Kramerius</comment>
 </param>
 <param name="alias:oai" value="http://www.openarchives.org/OAI/2.0/">
      <comment>Alias for OAI</comment>
 </param>
}}}

==Nastavení implementace resource indexu==

Ve stejné sekci fedora.fcfg, jako pro nastavení aliasů (resource index) je třeba změnit u parametru `datastore` hodnotu na `localPostgresMPTTriplestore`. V odpovídající sekci localPostgresMPTTriplestore, kde je definován datasource pro MPTTriplesotre, je třeba nastavit databázové heslo na heslo, které jste přiřadili uživateli fedoraAdmin. 

_(Poznámka: Kramerius 4 podporuje implementaci Resource index Mulgara i MPTtripleStore. To, která implementace bude použita, je určeno konfigurační property `resource.index.service.class` v souboru `configuration.properties` - viz níže. Výchozí hodnota této property je nastavena na MPTtripleStore, protože implementace Mulgara není v současné podobě použitelná se službou OAI provider. )_

==Nastavení přístupových práv==

Aplikace Kramerius 4 má vlastní systém řízení přístupových práv a nevyužívá systém XACML pravidel Fedora Commons. Pokud nepotřebujete k úložišti přistupovat odjinud, než z aplikace Kramerius 4, je tedy nejjednodušší úložiště vůbec nezveřejňovat a systém pravidel XACML nevyužívat. Deaktivace autorizačního systému je popsána v dokumentaci Fedora Commons, jednou z možností je v souboru fedora.fcfg v sekci `<module role="org.fcrepo.server.security.Authorization"` nastavit parametr `<param name="ENFORCE-MODE" value="permit-all-requests"/>`.

Jestliže z nějakého důvodu autorizační systém Fedora Commons potřebujete používat, je pravděpodobné, že narazíte na následující situace:

  * Pokud k administrátorskému rozhraní Fedory chcete přistupovat z jiného počítače, než na kterém je nainstalovaná, musíte deaktivovat nebo upravit omezení přístupu ` deny-apim-if-not-localhost.xml`

  * Při použití FOXML objektů s externě referencovaným obsahem datastreamů je třeba  deaktivovat nebo upravit pravidlo `deny-unallowed-file-resolution.xml`

XACML pravidla jsou uložena ve složce `$FEDORA_HOME/data/fedora-xacml-policies/repository-policies`. Deaktivaci lze provést buď editací xacml pravidel v souboru nebo jeho prostým odstraněním. Editace xacml pravidel je popsána v dokumentaci úložiště Fedora Commons.

==Import FOXML modelů==

Přes administrátorské rozhraní Fedory je třeba naimportovat FOXML objekty obsažené v distribučním souboru  installation-x.x.zip, adresář `fedora`. _Pokud budete importovat i [#Fedora_model OAI Fedora model], je před jeho importem nutné provést konfiguraci ._ Popis administrátorského rozhraní je součástí dokumentace Fedora Commons.

= Instalace Apache SOLR =

Na aplikační server nainstalovat aplikaci `solr.war` z distribučního souboru installation-x.x.zip.

Do adresáře $FEDORA_HOME/solr nakopírovat obsah adresáře `solr`  z distribučního souboru installation-x.x.zip.

V adresáři  $FEDORA_HOME/solr/conf editovat soubor solrconfig.xml - položka `dataDir`

= Instalace K4 =

Na aplikační server nainstalovat aplikace search.war, editor.war a rightseditor.war z distribučního souboru Kramerius-x.x.zip.

==Konfigurace datasource==

V aplikačním serveru nakonfigurujte JDBC datasource pro databázi `kramerius4` ( [PrikladKonfigurace#Konfigurace_datasource příklad pro Tomcat]). 

Do adresáře sdílených knihoven aplikačního serveru (v případě Tomcatu `tomcat/lib`) přidejte jar soubor s JDBC ovladačem pro PostgreSQL, který je součástí instalace vašeho databázového serveru.

==Instalace sdílených knihoven==

Pokud instalujete aplikaci K4 na stejnou instanci aplikačního serveru, na kterém je nainstalováno úložiště Fedora Commons, je třeba do adresáře sdílených knihoven aplikačního serveru (v případě Tomcatu `tomcat/lib`) překopírovat následující knihovní soubory jar z aplikace fedora (v případě Tomcatu adresář `webapps/fedora/WEB-INF/lib`):
  * `carol`
  * `commons-logging`  (pro Fedora Commons 3.4 a novější již není třeba)
  * `log4j` (pro Fedora Commons 3.4 a novější již není třeba)

==Nastavení kódování URI==

V aplikačním serveru nastavte kódování URI na UTF-8  ([PrikladKonfigurace#URIEncoding příklad pro Tomcat])



a povolit jednotné přihlašování:
{{{
<Host name="localhost" ...>
  ...
  <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
  ...
</Host>
}}}

Spustit tomcat pod uživatelem kramerius4. V domovském adresáři uživatele kramerius4 je vytvořen adresář .kramerius4 a v něm prázdné soubory configuration.properties, indexer.properties a migration.properties. Popis viz [Instalace#Konfigurace Konfigurace].


= Konfigurace =

Konfigurační soubory K4 využívají rozšířené syntaxe properties podporované použitou knihovnou Apache commons-configuration.  Soubory jsou uspořádány ve dvoustupňové hierarchii: Základní sdílené properties jsou v souboru configuration.properties, jednotlivé plugin moduly externích procesů je pak rozšiřují ve svých konfiguračních souborech (např. migration.properties, indexer.properties). Konfigurační properties specifické pro GUI K4 jsou v souboru search.properties.

Defaultní hodnoty properties (viz níže) jsou definovány uvnitř aplikačního archivu search.war. Hodnoty je možno předefinovat jejich uvedením ve stejně pojmenovaném souboru umístěném v adresáři $USER_HOME/.kramerius4. Tyto konfigurační soubory (prázdné) jsou vytvořeny automaticky při prvním spuštění K4, resp. příslušného externího procesu.


==configuration.properties==
{{{
#Global properties for kramerius 4

## index access
_fedoraTomcatHost=http://localhost:8080
indexerHost=${_fedoraTomcatHost}/fedoragsearch
solrHost=${_fedoraTomcatHost}/solr
FedoraResourceIndex= ${fedoraHost}/risearch

## list of top level content model names, comma separated
fedora.topLevelModels=monograph,periodical

fedora.predicatesPrefix=http://www.nsdl.org/ontologies/relationships#

##list of rels-ext predicates to recursive export
fedora.treePredicates=hasPage,hasPart,hasVolume,hasItem,hasUnit,hasIntCompPart,isOnPage

## fedora access
fedoraHost=${_fedoraTomcatHost}/fedora
fedoraUser=fedoraAdmin
fedoraPass=fedoraAdmin

## thumbnail images
scaledHeight=128

## max. number of pages in generated PDF documents
generatePdfMaxRange=20

## how many clients can start generating dynamic PDF documents
pdfQueue.activeProcess=2

## URL of the main K4 application, used for launching of external processes
applicationUrl=${_fedoraTomcatHost}/search

## Kramerius Editor URL (relative to Kramerius base URL)
editorUrl=/editor

## Users editor URL (relative to Kramerius base URL)
usersEditorUrl=/rightseditor

## number of active processes
processQueue.activeProcess=1

## check interval (in ms)
processQueue.checkInterval=10000

## method used for generating of scaled images
## supported values: REPLICATE, AREA_AVERAGING, BILINEAR, BICUBIC, NEAREST_NEIGHBOR, BILINEAR_STEPPED, BICUBIC_STEPPED, NEAREST_NEIGHBOR_STEPPED
scalingMethod=BICUBIC_STEPPED

## scaling method for full image servlet
## deprecated property - will be removed
fullImage.scalingMethod=${scalingMethod}
## whether scaling method should use better result (time expencive)
## deprected property - will be removed
fullImage.iterateScaling=true

## directory for full thumbs
fullThumbnail.cacheDirectory=${sys:user.home}/.kramerius4/fullThumb

## scaling method for thumb image servlet
thumbImage.scalingMethod=${scalingMethod}
## whether scaling method should use better result (time expencive)
thumbImage.iterateScaling=true

## scaling method for deepZoom servlet
deepZoom.scalingMethod=${scalingMethod}
## whether scaling method should use better result (time expencive)
deepZoom.iterateScaling=true

## Deep zoom cache directory
deepZoom.cachedir=${sys:user.home}/.kramerius4/deepZoom


## Deep zoom tile size
deepZoom.tileSize=512

## Deep zoom JPEG quality (1.0 is best, 0.0 is worst
deepZoom.jpegQuality=0.9

## How many steps over one tile 
deepZoom.numberStepsOverTile=3

## Global flag for enabling deepZoom
deepZoom.deepZoomEnabled=false

## how big should be original
deepZoom.originalScaleFactor=1.0

## Deep zoom for one uuid 
#deepZoom.4308eb80-b03b-11dd-a0f6-000d606f5dc6.deepZoomEnabled=true
## IIP Image integration

## Points to fedora's data folder
#fedoraDataFolderOnIIPServer=/mnt/fcdata/

## Points to data folder with raw images. 
# Used when IMG_FULL datastreams are referenced by URL 
#dataFolderOnIIPServer=/data/

## URL of IIPSserver
#UrlOfIIPserver=http://xxx.xxx.xxx.xxx/fcgi-bin/iipsrv.fcgi

## Supported interface languages
interface.languages=\u010Desky,cs,english,en

## connection to fedora 3 
fedora3.connectionURL=jdbc:postgresql://localhost/fedora3
fedora3.connectionUser=${fedoraUser}
fedora3.connectionPass=${fedoraPass}


# target directory for files for direct export (in Kramerius 4 FOXML format)
export.directory=${sys:user.home}/.kramerius4/export


# Jmeno externiho konfiguracniho souboru
_ext_configuration_file_name=configuration.properties

#class for communication with resource index (for RI Mulgara use cz.incad.kramerius.resourceindex.MulgaraImpl)
resource.index.service.class=cz.incad.kramerius.resourceindex.MPTStoreService




# The class name of the fedora.services.oaiprovider.QueryFactory
# implementation to use.
#
# This allows the OAI Provider to work with Fedora's Resource Index
# whether it's backed by Kowari or MPTStore.  If the RI uses Kowari,
# the value here should be fedora.services.oaiprovider.ITQLQueryFactory
# If it uses MPTStore, the value should be
# fedora.services.oaiprovider.MPTQueryFactory
#
driver.fedora.queryFactory = fedora.services.oaiprovider.ITQLQueryFactory

# The base URL of the Fedora repository to query and get records from.
#
driver.fedora.baseURL=${fedoraHost}

# Identifies a Fedora user that has privileges to do a resource index
# query via the risearch interface, and can get all needed disseminations
# that represent OAI records in the Fedora repository.
#
driver.fedora.user=${fedoraUser}

# Password for the Fedora user.
#
driver.fedora.pass=${fedoraPass}

# When querying the resource index, the maximum number of seconds to
# wait for the http connection to be established before giving up.
#
driver.fedora.queryConnectionTimeout = 30

# When querying the resource index, the maximum number of seconds of
# socket inactivity to allow before giving up.
#
driver.fedora.querySocketTimeout = 600

# When getting xml data from Fedora, the maximum number of seconds to
# wait for the http connection to be established before giving up.
#
driver.fedora.disseminationConnectionTimeout = 30

# When getting xml data from Fedora, the maximum number of seconds of
# socket inactivity to allow before giving up.
#
driver.fedora.disseminationSocketTimeout = 120

# The location of the XML that should be used to respond to OAI
# "Identify" requests.
#
# This can be any URL, but typically it points to a manually-created
# datastream within the same Fedora repository that hosts the OAI records.
#
driver.fedora.identify = ${fedoraHost}/get/demo:MyRepository/Identify.xml

# The name of the RELS-EXT property whose value (a plain literal)
# contains the OAI item ID for records that are provided by an object.
#
# A value for this property *must* exist in RELS-EXT before any of an
# object's disseminations will be considered to be OAI records.
#
driver.fedora.itemID = http://www.openarchives.org/OAI/2.0/itemID


################################################
# Fedora Driver: Metadata Format Configuration #
################################################

# Metadata formats to make available.
#
# This is a space-delimited list of all formats provided,
# identified by OAI metadata prefix.
#
driver.fedora.md.formats = oai_dc test_format formatX formatY

# The location of the W3C schema for each format.
#
# Example property name:
# <code>driver.fedora.md.format.your_format.loc</code>.
#
driver.fedora.md.format.oai_dc.loc = http://www.openarchives.org/OAI/2.0/oai_dc.xsd
driver.fedora.md.format.test_format.loc = http://example.org/test_format.xsd
driver.fedora.md.format.formatX.loc = http://example.org/formatX.xsd
driver.fedora.md.format.formatY.loc = http://example.org/formatY.xsd

# The namespace URI for each format.
#
# Example property name:
# <code>driver.fedora.md.format.your_format.uri</code>.
#
driver.fedora.md.format.oai_dc.uri = http://www.openarchives.org/OAI/2.0/oai_dc/
driver.fedora.md.format.test_format.uri = http://example.org/test_format/
driver.fedora.md.format.formatX.uri = http://example.org/formatX/
driver.fedora.md.format.formatY.uri = http://example.org/formatY/

# The Fedora dissemination type for each format.
#
# <p>A Fedora dissemination type is a URI starting with
# <code>info:fedora/*/</code> and ending with a datastream ID (such as "DC"),
# a Behavior Definition PID followed by "/methodName",
# or a Behavior Definition PID followed by "/methodName?name=value".</p>
#
# <p>The dissType is the key to mapping an OAI metadata format to
# a kind of Fedora dissemination.  Here are a few examples:</p>
#
# <pre>
# info:fedora/*/DC                  ; identifies the "DC" datastream
#
# info:fedora/*/demo:1/getDC        ; identifies the "getDC" method of the
#                                   ; demo:1 behavior definition
#
# info:fedora/*/demo:1/getMD?fmt=dc ; identifies the "getMD" method of the
#                                   ; demo:1 behavior definition, when
#                                   ; invoked with the required "fmt"
#                                   ; parameter
# </pre>
#
# When the OAI provider queries Fedora for records in your_format,
# it uses this special value to constrain the query to only those
# disseminations that are in the expected format.
# Thus, all records that the OAI provider considers to be in
# your_format must have this dissemination type.
#
# Example property name:
# <code>driver.fedora.md.format.your_format.dissType</code>.
#
driver.fedora.md.format.oai_dc.dissType = info:fedora/*/oai_dc
driver.fedora.md.format.test_format.dissType = info:fedora/*/test_format
driver.fedora.md.format.formatX.dissType = info:fedora/*/demo:OAIAdvancedItem-Service/getMetadata?format=x
driver.fedora.md.format.formatY.dissType = info:fedora/*/demo:OAIAdvancedItem-Service/getMetadata?format=y

# The Fedora dissemination type for each format.
#
# This optional property identifies the OAI "about" dissemination
# type for your_format. If specified for your_format, then the OAI provider
# will attempt to find disseminations of this type for each object
# that has a matching your_format.dissType.  If such a dissemination
# is found, for that particular object, the information therein
# will be used as the "about" metadata for the record.
#
# Example property name:
# <code>driver.fedora.md.format.your_format.about.dissType</code>.
#
driver.fedora.md.format.oai_dc.about.dissType = info:fedora/*/about_oai_dc
driver.fedora.md.format.formatX.about.dissType = info:fedora/*/demo:OAIAdvancedItem-Service/getMetadataAbout?format=x
driver.fedora.md.format.formatY.about.dissType = info:fedora/*/demo:OAIAdvancedItem-Service/getMetadataAbout?format=y


###############################################
# Fedora Driver: Set Membership Configuration #
###############################################

# The name of the RELS-EXT property that indicates the unique setSpec
# string of a Fedora object representing an OAI set.
# This property must exist on any Fedora object that should
# represent an OAI set.
#
driver.fedora.setSpec = http://www.openarchives.org/OAI/2.0/setSpec

# The name of the RELS-EXT property that indicates the name of
# a Fedora object representing an OAI set.
# In addition to setSpec, this property must also exist on any
# Fedora object that should represent an OAI set.
#
driver.fedora.setSpec.name = http://www.openarchives.org/OAI/2.0/setName

# The dissemination type for the XML that describes a set.
# If a dissemination of this type is available for a Fedora object
# representing an OAI set, the content of the dissemination will
# be used in ListSets responses.
#
driver.fedora.setSpec.desc.dissType = info:fedora/*/SetInfo.xml

# The "triple pattern" identifying the path from objects to the
# setsSpecs (short names) of sets they are members of.
#
# <p>The path must contain $item and $setSpec, with the $item
# variable representing a Fedora object in the resource index,
# and the $setSpec representing the setSpec name.</p>
#
driver.fedora.itemSetSpecPath = $item <info:fedora/fedora-system:def/relations-external#isMemberOf> $set $set <http://www.openarchives.org/OAI/2.0/setSpec> $setSpec

#########################################
# Fedora Driver: MPTStore Configuration #
#########################################

# The values below only need to be configured if using
# MPTQueryFactory (Fedora's Resource Index is backed by MPTStore).
#
NOTE=.

# The JDBC driver class for connecting to the MPTStore database.
#
driver.fedora.mpt.db.driverClassName = org.postgresql.Driver

# The database-specific DDLGenerator to use for MPTStore.
#
driver.fedora.mpt.db.ddlGenerator = org.nsdl.mptstore.impl.postgres.PostgresDDLGenerator

# The JDBC URL for connecting to the MPTStore database.
#
driver.fedora.mpt.jdbc.url = jdbc:postgresql://localhost/riTriples

# The user to connect to the MPTStore database as.
#
driver.fedora.mpt.jdbc.user =${fedoraUser}

# The MPTStore database user's password.
#
driver.fedora.mpt.jdbc.password = ${fedoraPass}

# This configuration value is necessary to initialize the MPTStore library,
# and should not need to be changed.
#
driver.fedora.mpt.db.map = tmap

# This configuration value is necessary to initialize the MPTStore library,
# and should not need to be changed.
#
driver.fedora.mpt.db.prefix = t


#########################################
# Fedora Driver: Advanced Configuration #
#########################################

# driver.fedora.deleted
# This is the name of the RELS-EXT predicate that indicates the state
# of all records within the object.
#
# <p>The normal behavior is that the Fedora-controlled "state" property
# of the dissemination (or datastream) itself indicates the oai deleted
# status.  This can be used to specify the status via any object
# property, if desired.</p>
#
#driver.fedora.deleted = info:fedora/fedora-system:def/model#state
}}}

==search.properties==
{{{

_ext_configuration_file_name=search.properties

#Seznam a poradi zalozek. Mozne hodnoty custom,info,newest,mostDesirables
search.home.tabs=custom,info,newest,mostDesirables

#Seznam pids (oddelene carkou) objektu, zobrazenych na zalozce custom
search.home.tab.custom.uuids=uuid:4308eb80-b03b-11dd-a0f6-000d606f5dc6,uuid:5fe0b160-62d5-11dd-bdc7-000d606f5dc6,uuid:73531500-aa3b-11dd-8002-000d606f5dc6

#Seznam zalozek v zobrazeni dokumentu mimo Nahled a Popis
# nazev1,datastream1,nazev2,datastream2
search.item.tabs=

#Pocet vysledku na strance
search.results.rows=20
#Pocet rozbalenych polozek v seznamu vysledku
search.results.numOpenedRows=20
}}}

==migration.properties==
{{{
# mac address for uuid generator
uuid.mac=00:1b:63:bd:97:ba

# connection to Kramerius 3 postgres db (replication source)
k3.db.driver=org.postgresql.Driver
k3.db.url=jdbc:postgresql://localhost:5432/kramerius
k3.db.user=kramerius
k3.db.password=f8TasR

# URL of Kramerius 3 (replication source)
k3.replication.url=http://localhost:8080/kramerius/

# replication institution (password is in the hash form)
k3.replication.sigla=ABA002
k3.replication.login=replication
k3.replication.password=f29fabe637a472bf5222b12a0bc5df77

# source directory for files for conversion and import (in Kramerius 3 format)
convert.directory=${sys:user.home}/.kramerius4/convert

# target directory for conversion
convert.target.directory=${sys:user.home}/.kramerius4/convert-converted

# source directory for files for direct import (in Kramerius 4 FOXML format)
import.directory=${sys:user.home}/.kramerius4/import




# working directory for repliaction and conversion
migration.directory=${sys:user.home}/.kramerius4/replication

#target directory for replication and conversion
migration.target.directory=${sys:user.home}/.kramerius4/replication-converted


# list of periodicasl IDs to replicate
migration.periodicals= ${sys:user.home}/.kramerius4/periodicals.txt

# list of monographs IDs to replicate
migration.monographs=${sys:user.home}/.kramerius4/monographs.txt

# controls if convertor K3->K4 should generate IMG_PREVIEW
convert.generatePreview=true

# size of the generated preview in pixels (maximum height or width)
convert.previewSize=700

# number of characters used as contractNumber in image file names (5 at NKP, 18 at KNAV)
contractNo.length=5

#convertor will create subfolder with contract name in the conversion target subfolder, the contents of the target directory is not deleted prior conversion batch
convert.useContractSubfolders=false

#used only when convert.useContractSubfolders=true. The convertor will copy the the original K3 xml file to the target subfolder
#and rename it to replication title ID (when called from Replicate process) or contract ID (when called from Convert process) with the .k3 extension
convert.copyOriginal=false

# controls how convertor K3->K4 should embed binary streams ( encoded/referenced/external)
convert.files=encoded
# controls how convertor K3->K4 should embed preview streams ( encoded/referenced/external)
convert.previews=encoded
# controls how convertor K3->K4 should embed thumbnail streams ( encoded/referenced/external)
convert.thumbnails=encoded

#controls if original image should be converted to JPG (should be true if ALTO is used)
convert.originalToJPG=false

# if original K3 document references non-existing data file, conversion is terminated. If this property is set to true, only a warning is logged and conversion continues.
convert.ignoreMissingFiles=false

#default visibility of the imported documents
convert.defaultRights=false

#ingest and indexing phases of migration processes will be skipped
ingest.skip=false

# connection to fedora repository (replication target)
ingest.url=${fedoraHost}
ingest.user=${fedoraUser}
ingest.password=${fedoraPass}

# external configuration file name
_ext_configuration_file_name=migration.properties

}}}


==indexer.properties==
{{{
# absolutni cesta k adresari solr indexu 
IndexDir=${sys:user.home}/fedora/solr/data/index

#sablona XSLT pro indexaci
#UpdateIndexDocXslt=KrameriusFoxmlToSolr
UpdateIndexDocXslt=K4

#URL solr
IndexBase=${solrHost}


FOXMLFormat=info:fedora/fedora-system:FOXML-1.1

# Jmeno externiho konfiguracniho souboru
_ext_configuration_file_name=indexer.properties
}}}

=Podpora protokolu deepZoom=
Kromě standardního zobrazení obrázků má aplikace kramerius4 možnost prezentovat je pomocí prohlížečky seadragon(http://www.zoom.it). V tomto případě je zapotřebí krameria nakonfiguruovat. Jsou dvě možnosti: 

 * Využít produkt IIP server (http://iipimage.sourceforge.net).

Zde slouží kramerius jako prostředník. Klientské dotazy na jednotlivé dlaždice přeposílá IIP serveru a sám se stará pouze o autorizaci požadavku. Konfigurace adresy serveru pro dlaždice je uložena v metadatech ve streamu RELS-EXT. Konkrétně se jedná o  literál 
<kramerius4:tiles-url>. Hodnotou literálu je přímo URL na zoomovaný obrázek. 

Příklady definic v RELS-EXT:

<kramerius4:tiles-url>http://192.168.1.1/fcgi-bin/iipsrv.fcgi?DeepZoom=/mzk03/001/042/654/2619265924.jp2</kramerius4:tiles>

<kramerius4:tiles-url>http://imageserver.mzk.cz/mzk03/001/066/607/2619320306/1</kramerius4:tiles-url>

Pokud je obrázek ve fedoře uložen jako "Managed Content Stream"  je potřeba do URL dopropagovat fyzickou adresu souboru. Kramerius 4 umožňuje získat relativní adresu streamu pomocí interpretované proměnné $internalstream$,která může být přímo součástí URL adresy. Adresa je raltivní vůči kořenovému adresáři fedory, kde fedora uchovává data. Standardně se tento kořenový adresář nachází $FEDORA_HOME$/data

Příklad definice v RELS-EXT: 

<kramerius4:tiles-url>http://192.168.1.1/fcgi-bin/iipsrv.fcgi?DeepZoom=/mnt/fedora_data_folder/$internalstream$</kramerius4:tiles-url>

Pozn.: Předpokládá se, že IIP server má datový adresář fedory připojený jako /mnt/fedora_data_folder/


 * Systémem kramerius si vygenerovat soubory do interní cache.
V tomto případě je nutné mít v literálu kramerius4:tiles-url mít uvedenou konstantu 
kramerius4://deepZoomCache. 

Příklad:

<kramerius4:tiles-url>kramerius4://deepZoomCache</kramerius4:tiles-url>

Pozn. Je samozřejmě nutné cache naplnit a to akcí "Generování Deep Zoom Cache...".  


==Verze IIP serveru==

Standardní IIP server rozeznává typy souborů dle koncovky. Aby mohl podávat soubory, které nemají koncovky (např. datastreamy z fedory) bylo potřeba udělat zásah do serveru.  Pozměněnou verzi IIP serveru je možné najít zde: 

http://iris.mzk.cz/iipimage.tar.bz2 



=Přístupová práva uživatelů=

Kramerius 4 používá od verze 4.2 nový systém správy uživatelů a přístupových práv. Jeho principy a administrace jsou popsány v dokumentu [Prava Správa uživatelů]

==Instalace==

===tomcat===

do lib přidat security-core.jar
do webapps nainstalovat aplikaci rightseditor.war
povolit single sign on v server.xml 

{{{
<Valve className="org.apache.catalina.authenticator.SingleSignOn" />
}}}

do conf/Catalina/localhost přidat soubory search.xml a rightseditor.xml s tímto obsahem

{{{
<Context>
	<Realm className="org.apache.catalina.realm.JAASRealm"                 
		appName="search"       
		userClassNames="cz.incad.kramerius.security.jaas.K4UserPrincipal"       
		roleClassNames="cz.incad.kramerius.security.jaas.K4RolePrincipal"
		debug="99"/>
</Context>
}}}

===fedora===

do server/config/jaas.conf přidat:
{{{
search {
 cz.incad.kramerius.security.jaas.K4LoginModule required debug=true;
};


rightseditor {
 cz.incad.kramerius.security.jaas.K4LoginModule required debug=true;
};
}}}


===Kramerius4===

do .kramerius4 přidat mail.properties s obsahem:

{{{
# Mail properties bez SSL
mail.smtp.user=hudlibudli@gmail.com
mail.smtp.pass=blablabla
mail.smtp.host=smtp.gmail.com
mail.smtp.port=25
}}}

nebo 

{{{
# Mail properties s podporou SSL
mail.smtp.user=hudlibudli@gmail.com
mail.smtp.pass=blablabla
mail.smtp.host=smtp.gmail.com
mail.smtp.port=465
mail.smtp.starttls.enable=true
mail.smtp.auth=true
mail.smtp.socketFactory.port=465
mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
mail.smtp.socketFactory.fallback=false
}}}


Po prvním spuštění aplikace se v databázi vytvoří databázové tabulky s předdefinovanými pravidly a implicitnim admin uživatelem.  Nastaveni pravidel odpovídá dosavadním verzím K4 a předdefinované jméno a heslo admin uživatele je: 

krameriusAdmin 

krameriusAdmin

=Editor pořadí částí dokumentu (RELS-EXT)=

Editor se instaluje jako samostatná webová aplikace nakopírováním souboru editor.war do složky webapps v Tomcatu.

Před spuštěním je potřeba mít nakonfigurován single-sign-on (viz Přístupová práva).

Kramerius 4 umožňuje nahradit tento výchozí editor jiným editorem. To, který editor se spustí z kontextového menu v GUI K4, je určeno položkou editorUrl v configuration.properties:

{{{
editorUrl=${_fedoraTomcatHost}/editor
}}}

Volané url z kontextového menu má například takovýto tvar: 
{{{
http://localhost:8080/editor/?openIDs=uuid:0eaa6730-9068-11dd-97de-000d606f5dc6&locale=en
}}}  



= Instalace OAI =

== Fedora model ==

V `service_ESEDep.xml` a `model_repository.xml` (https://kramerius.googlecode.com/svn/trunk/installation/fedora) opravit všechny `FIXME`.

== PostgreSQL ==

Vytvořit uživatele `proai` a databázi `proai`.

== Tomcat ==

Do `tomcat/webapps` nakopírovat `oaiprovider.war` z SVN K4 (https://kramerius.googlecode.com/svn/trunk/installation/oai).

Editovat `tomcat/webapps/oaiprovider/WEB-INF/classes/proai.properties`.
{{{
# /tmp/proai obsahuje exportovaná data a nesmí být mazán bez úpravy proai databáze
proai.cacheBaseDir = /tmp/proai/cache
proai.sessionBaseDir = /tmp/proai/sessions
proai.schemaDir = /tmp/proai/schemas

# nahradit všechny odkazy 'localhost' skutečným serverem

# v případě potřeby změnit přístupová jména a hesla podle skutečnosti
proai.db.url = jdbc:postgresql://localhost/proai
proai.db.username = proai
proai.db.password = ********
driver.fedora.user = fedoraAdmin
driver.fedora.pass = ********
driver.fedora.mpt.jdbc.user = fedoraAdmin
driver.fedora.mpt.jdbc.password = ********

# povolit export dat z Fedory
proai.driverPollingEnabled = true
}}}