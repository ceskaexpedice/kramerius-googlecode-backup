#summary Popis instalace a nastavení K4
<wiki:toc max_depth="1" />

=  Systémové komponenty =

Před instalací aplikace Kramerius 4 je třeba nainstalovat následující komponenty:

  * JDK 1.6
  * J2EE server nebo servlet kontejner (popsaná instalace předpokládá Apache Tomcat 6)
  * Postgres 8, vytvořit uživatele fedoraAdmin a databáze fedora3 a kramerius4

Operační systém může být libovolný, na kterém je možno tyto komponenty provozovat, vlastní aplikace Kramerius 4 žádné speciální požadavky na systém nemá. Hardware serveru musí být dimenzován na uvažované množství dat, doporučujeme minimálně dvojnásobnou velikost pevného disku, než je plánovaná velikost obrazových dat. Vzhledem k velké paměťové náročnosti práce s grafickými daty (náhledy stránek, zoomování) je třeba i při minimálním provozu aplikace alespoň 4GB RAM. 

K4 je vhodné nainstalovat pod samostatným uživatelským účtem, například kramerius4. 

Nastavit potřebné systémové proměnné (předpokládáme instalaci Tomcatu a Fedory do domácího adresáře uživatele kramerius4):
{{{
export JAVA_HOME=/usr/java/jre1.6.0_20
export CATALINA_HOME=$HOME/tomcat
export FEDORA_HOME=$HOME/fedora
export JAVA_OPTS=" -Djava.awt.headless=true  -Dsolr.solr.home=$FEDORA_HOME/solr -XX:MaxPermSize=128m -Xms512m -Xmx1024m" 
export PATH=$PATH:$FEDORA_HOME/server/bin:$FEDORA_HOME/client/bin:$CATALINA_HOME/bin:$JAVA_HOME/bin 
}}}

V produkčním prostředí je před J2EE server (Tomcat) vhodné předřadit webserver přístupný na portu 80.

= Instalace Fedory =

Nainstalujte repository Fedora 3.3 pomocí instalátoru fcrepo-installer-3.3.jar. Následuje výpis odpovědí na otázky instalátoru, volby odlišné od defaultních jsou označeny *****

{{{
Installation type: custom  ******

Fedora home: default (/usr/local/fedora)

admin password: fedoraAdmin  ******

Fedora server: default (localhost)

Fedora context: default (fedora)

API-A authentication: default (false)

SSL availability: default (true)

API-A SSL required: default (false)

API-M SSL required: false ******

Servlet engine: existingTomcat  ********

Tomcat home directory: default  (CATALINA_HOME)

Tomcat HTTP port: default (8080)

Tomcat shutdown port: default (8005)

Tomcat secure HTTP port: default (8443)

Keystore file: included *****

Database: postgresql   ******

JDBC driver : default (included)

Database username: fedoraAdmin

Database password: fedoraAdmin

Database URL: default (localhost/fedora3)

JDBC driver: default 

Enable FESL:  default  (false)

Policy enforcement enabled: default (true)

Enable resource index: true  *********

Enable messaging : default (false)

Deploy local services: default (true)
}}}

Po instalaci fedory je třeba do souboru fedora.fcfg do sekce module: resource index přidat následující parametry:

{{{
 <param name="alias:kramerius" value="http://www.nsdl.org/ontologies/relationships#">
      <comment>Alias for Kramerius</comment>
 </param>
 <param name="alias:oai" value="http://www.openarchives.org/OAI/2.0/">
      <comment>Alias for OAI</comment>
 </param>
}}}

Pokud k administrátorskému rozhraní Fedory chcete přistupovat z jiného počítače, než na kterém je nainstalovaná, musíte deaktivovat omezení přístupu  deny-apim-if-not-localhost.xml (ve složce data/fedora-xacml-policies/repository-policies). 
Přes administrátorské rozhraní fedory je třeba naimportovat FOXML objekty obsažené v SVN K4 v modulu installation/fedora (https://kramerius.googlecode.com/svn/trunk/installation/fedora). *Před importem je nutné provést konfiguraci [#Fedora_model OAI Fedora modelu].*

= Instalace Apache SOLR =

Do tomcat/webapps nakopírovat solr.war

Do adresáře $FEDORA_HOME/solr nakopírovat obsah modulu z SVN K4 installation/solr
(https://kramerius.googlecode.com/svn/trunk/installation/solr)

editovat solrconfig.xml - položka solr data home

= Instalace K4 =

Do tomcat/webapps nakopírovat search.war

do tomcat-users.xml přidat uživatele s rolí krameriusAdmin:
{{{
 <role rolename="krameriusAdmin"/>
 <user username="kramerius" password="bflmpsvz" roles="krameriusAdmin"/> 
}}}


do context.xml přidat definici datasource: 
{{{
<Resource name="jdbc/kramerius4" auth="Container" type="javax.sql.DataSource"
        initialSize="3"
        maxActive="100" maxIdle="30" maxWait="10000"
        username="fedoraAdmin" password="fedoraAdmin" driverClassName="org.postgresql.Driver"
        url="jdbc:postgresql://localhost/kramerius4"/>
}}}

do tomcat/lib překopírovat následující jary z webapps/fedora/WEB-INF/lib:
  * carol
  * commons-logging
  * log4j
  * postgres


do server.xml přidat URIEncoding:
{{{
 <Connector port="8080" protocol="HTTP/1.1" 
               connectionTimeout="20000" URIEncoding="UTF-8"
               redirectPort="8443" />
}}}

Spustit tomcat pod uživatelem kramerius4. V domovském adresáři uživatele kramerius4 je vytvořen adresář .kramerius4 a v něm prázdné soubory configuration.properties, indexer.properties a migration.properties. Popis viz [Konfigurace].

= Instalace OAI =

== Fedora model ==

V `service_ESEDep.xml` a `model_repository.xml` (https://kramerius.googlecode.com/svn/trunk/installation/fedora) opravit všechny `FIXME`.

== PostgreSQL ==

Vytvořit uživatele `proai` a databázi `proai`.

== Tomcat ==

Do `tomcat/webapps` nakopírovat `oaiprovider.war` z SVN K4 (https://kramerius.googlecode.com/svn/trunk/installation/oai).

Editovat `tomcat/webapps/oaiprovider/oaiprovider/WEB-INF/classes/proai.properties`.
{{{
# /tmp/proai obsahuje exportovaná data a nesmí být mazán bez úpravy proai databáze
proai.cacheBaseDir = /tmp/proai/cache
proai.sessionBaseDir = /tmp/proai/sessions
proai.schemaDir = /tmp/proai/schemas

# nahradit všechny odkazy 'localhost' skutečným serverem

# v případě potřeby změnit přístupová jména a hesla podle skutečnosti
proai.db.url = jdbc:postgresql://localhost/proai
proai.db.username = proai
proai.db.password = ********
driver.fedora.user = fedoraAdmin
driver.fedora.pass = ********
driver.fedora.mpt.jdbc.user = fedoraAdmin
driver.fedora.mpt.jdbc.password = ********

# povolit export dat z Fedory
proai.driverPollingEnabled = true
}}}

= Konfigurace =

Konfigurační soubory K4 využívají rozšířené syntaxe properties podporované použitou knihovnou Apache commons-configuration.  Soubory jsou uspořádány ve dvoustupňové hierarchii: Základní sdílené properties jsou v souboru configuration.properties, jednotlivé plugin moduly externích procesů je pak rozšiřují ve svých konfiguračních souborech (např. migration.properties, indexer.properties).

Defaultní hodnoty properties (viz níže) jsou definovány uvnitř aplikačního archivu search.war. Hodnoty je možno předefinovat jejich uvedením ve stejně pojmenovaném souboru umístěném v adresáři $USER_HOME/.kramerius4. Tyto konfigurační soubory (prázdné) jsou vytvořeny automaticky při prvním spuštění K4, resp. příslušného externího procesu.


==configuration.properties==
{{{
#Global properties for kramerius 4

## index access
_fedoraTomcatHost=http://localhost:8080
indexerHost=${_fedoraTomcatHost}/fedoragsearch
solrHost=${_fedoraTomcatHost}/solr

## list of top level content model names, comma separated
fedora.topLevelModels=monograph,periodical

## fedora access
fedoraHost=${_fedoraTomcatHost}/fedora
fedoraUser=fedoraAdmin
fedoraPass=fedoraAdmin

## thumbnail images
scaledHeight=128

## regular expressions for IP addresses allowed to access private documents.
## list of expressions separated by ||
accessPatterns=127.*

## regular expressions for IP addresses allowed manipulate with long running processes.
## list of expressions separated by ||
controllingPatterns=127.*

## max. number of pages in generated PDF documents
generatePdfMaxRange=20

## URL of the main K4 application, used for launching of external processes
applicationUrl=${_fedoraTomcatHost}/search


## number of active processes
processQueue.activeProcess=1

## check interval (in ms)
processQueue.checkInterval=10000

## method used for generating of scaled images
## supported values: REPLICATE, AREA_AVERAGING, BILINEAR, BICUBIC, NEAREST_NEIGHBOR, BILINEAR_STEPPED, BICUBIC_STEPPED, NEAREST_NEIGHBOR_STEPPED
scalingMethod=BICUBIC_STEPPED


## scaling method for full image servlet
fullImage.scalingMethod=${scalingMethod}
## whether scaling method should use better result (time expencive)
fullImage.iterateScaling=true

## scaling method for thumb image servlet
thumbImage.scalingMethod=${scalingMethod}
## whether scaling method should use better result (time expencive)
thumbImage.iterateScaling=true

## scaling method for deepZoom servlet
deepZoom.scalingMethod=${scalingMethod}
## whether scaling method should use better result (time expencive)
deepZoom.iterateScaling=true

## Deep zoom cache directory
deepZoom.cacheDirectory=${sys:user.home}/.kramerius4/deepZoom

## Deep zoom tile size
deepZoom.tileSize=512

## Deep zoom JPEG quality (1.0 is best, 0.0 is worst)
deepZoom.jpegQuality=1.0


## external configuration file name
_ext_configuration_file_name=configuration.properties
}}}

==migration.properties==
{{{
# mac address for uuid generator
uuid.mac=00:1b:63:bd:97:ba

# connection to Kramerius 3 postgres db (replication source) 
k3.db.driver=org.postgresql.Driver
k3.db.url=jdbc:postgresql://localhost:5432/kramerius
k3.db.user=kramerius
k3.db.password=f8TasR

# URL of Kramerius 3 (replication source)
k3.replication.url=http://localhost:8080/kramerius/

# replication institution 
k3.replication.sigla=ABA002
k3.replication.login=replication
k3.replication.password=f29fabe637a472bf5222b12a0bc5df77

# working directory for repliaction and conversion
migration.directory=${sys:user.home}/.kramerius4/replication

# list of periodicasl IDs to replicate
migration.periodicals= ${sys:user.home}/.kramerius4/periodicals.txt

# list of monographs IDs to replicate
migration.monographs=${sys:user.home}/.kramerius4/monographs.txt

# number of characters used as contractNumber in image file names (5 at NKP, 18 at KNAV)
contractNo.length=5

# connection to fedora repository (replication target)
ingest.url=${fedoraHost}
ingest.user=${fedoraUser}
ingest.password=${fedoraPass}

# external configuration file name
_ext_configuration_file_name=migration.properties

}}}


==indexer.properties==
{{{
# absolutni cesta k adresari solr indexu 
IndexDir=${sys:user.home}/fedora/solr/data/index

#sablona XSLT pro indexaci
UpdateIndexDocXslt=KrameriusFoxmlToSolr

#URL solr
IndexBase=${solrHost}

# repository
FedoraSoap= ${fedoraHost}/services
FedoraResourceIndex= ${fedoraHost}/risearch
FedoraUser= ${fedoraUser}
FedoraPass= ${fedoraPass}
FedoraVersion= 3.1
RepositoryName=Kramerius

#indexed MIME types
MimeTypes= text/plain text/html application/pdf


FOXMLFormat=info:fedora/fedora-system:FOXML-1.1

# Jmeno externiho konfiguracniho souboru
_ext_configuration_file_name=indexer.properties
}}}

=Přístupová práva uživatelů=
Přístup k administrátorským funkcím je kontrolován na úrovni aplikačního serveru standardním mechanismem přiřazení potřebných rolí příslušným uživatelům. Správa uživatelských účtů a rolí je specifická pro použitý aplikační server, např. ve výchozí instalaci serveru Tomcat se provádí editací souboru tomcat-users.xml v adresáři conf.

Pro povolení přístupu ke všem administrátorským operacím je uživateli možno přiřadit roli krameriusAdmin.

Pro řízení přístupu na úroveň jednotlivých administrátorských procesů je třeba uživateli přiřadit roli odpovídající identifikátoru příslušného procesu. K dispozici jsou následující role:

static_export_CD, reindex, replikator_monograph, replikator_periodicals, enumerator, replicationrights, setpublic, setprivate, delete, export, convert, import