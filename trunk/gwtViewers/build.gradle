usePlugin('java')
usePlugin('war')
usePlugin('maven')


def artifactoryUid = "admin"
def artifactoryURL = "http://svn:8080/artifactory"

println System.properties['user.home']


project.group='gwt.cz.incad.gwtviewers'
project.version='1.0-SNAPSHOT'
project.artifact='gwtviewers'



repositories {
        mavenRepo urls: "${artifactoryURL}/libs-snapshots"
        mavenRepo urls: "${artifactoryURL}/libs-releases"
        mavenRepo urls: (new File("${System.properties['user.home']}/.m2/repository")).toURL()
}


configurations {
	gwtCompile
	deployerJars
}


dependencies {
  compile (
          [group: 'gwt.com.google.gwt.sdk', name: 'gwt-user', version: '2.0.0'],
          [group: 'gwt.com.google.gwt.sdk', name: 'gwt-dev', version: '2.0.0'],
          [group: 'gwt.org.adamtacy', name: 'gwtFX', version: '0.5.0'],
          [group: 'gwt.com.google', name: 'gwt-incubator', version: '2.0'],
          [group: 'cz.i.kramerius', name: 'kramerius-common', version: '0.0.1-SNAPSHOT'],
          )
	
}


sourceSets{
	main {
		java { 
			srcDir 'src' 
		}
	}
}


uploadArchives {
   repositories.mavenDeployer {
      name = 'httpDeployer'
      configuration = configurations.deployerJars
      repository(url: "${artifactoryURL}/libs-releases-local") {
         authentication userName: "${artifactoryUid}", password: "${artifactoryPwd}"
      }
      snapshotRepository(url: "${artifactoryURL}/libs-snapshots-local") {
         authentication userName: "${artifactoryUid}", password: "${artifactoryPwd}"
      }
   }
}

task gwtCompile << {
  created = (new File(gwtBuildDir)).mkdirs()
  ant.java(classname:'com.google.gwt.dev.Compiler', failOnError: 'true', fork: 'true') {
    jvmarg(value: '-Xmx184M')
    arg(line: '-war ' + gwtBuildDir)
    arg(line: '-logLevel INFO')
    arg(line: '-style PRETTY')
    arg(value: 'me.trond.app.MyApp')
    classpath {
      pathElement(location: srcRootName + '/' + srcDirNames[0])
      pathElement(path: configurations.compile.asPath)
      pathElement(path: configurations.gwtCompile.asPath)
    }
  }
}



