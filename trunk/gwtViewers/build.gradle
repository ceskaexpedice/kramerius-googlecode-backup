import org.gradle.api.tasks.*

usePlugin('java')
usePlugin('war')
usePlugin('maven')


def artifactoryUid = System.properties["user"]
def artifactoryPwd = System.properties["pswd"]
def artifactoryURL = "http://svn:8080/artifactory"
def gwtBuildDir = "gwtBuild"
def gwtApplicationName="cz.i.kramerius.gwtviewers.GwtViewers"

project.group='gwt.cz.incad.gwtviewers'
project.version='1.0-SNAPSHOT'
project.artifact='gwtviewers'



repositories {
        mavenRepo urls: "${artifactoryURL}/libs-snapshots"
        mavenRepo urls: "${artifactoryURL}/libs-releases"
}


configurations {
	gwtCompile
	deployerJars
}

artifacts {
	
}

dependencies {
  compile (
          [group: 'gwt.com.google.gwt.sdk', name: 'gwt-user', version: '2.0.0'],
          [group: 'gwt.com.google.gwt.sdk', name: 'gwt-dev', version: '2.0.0'],
          [group: 'gwt.org.adamtacy', name: 'gwtFX', version: '0.5.0'],
          [group: 'gwt.com.google', name: 'gwt-incubator', version: '2.0'],
          [group: 'cz.incad.kramerius', name: 'kramerius-common', version: '0.0.1-SNAPSHOT'],
          )

  gwtCompile (
          [group: 'gwt.com.google.gwt.sdk', name: 'gwt-user', version: '2.0.0'],
          [group: 'gwt.com.google.gwt.sdk', name: 'gwt-dev', version: '2.0.0'],
          [group: 'gwt.org.adamtacy', name: 'gwtFX', version: '0.5.0'],
          [group: 'gwt.com.google', name: 'gwt-incubator', version: '2.0'],
          )
	
}


sourceSets{
	main {
		java { 
			srcDir 'src' 
		}
	}
}

uploadArchives  {
   repositories.mavenDeployer {
      name = 'httpDeployer'
      configuration = configurations.deployerJars
      repository(url: "${artifactoryURL}/libs-releases-local") {
         authentication userName: "${artifactoryUid}", password: "${artifactoryPwd}"
      }
      snapshotRepository(url: "${artifactoryURL}/libs-snapshots-local") {
         authentication userName: "${artifactoryUid}", password: "${artifactoryPwd}"
      }
   }
}


war {
    fileSet(dir: file('war')) // adds a file-set to the root of the archive
    webInf(dir: file('war/WEB-INF')) // adds a file-set to the WEB-INF dir.
    webXml = file('war/WEB-INF/web.xml') // copies a file to WEB-INF/web.xml
}


task gwtCompile << { 
	sourceSets.main.java.srcDirs.each{ sourceDir->
		println "Building source $sourceDir"	
		ant.java(classname:'com.google.gwt.dev.Compiler', failOnError: 'false', fork: 'true') {
		jvmarg(value: '-Xmx184M')
		arg(line: '-war war')
		arg(line: '-logLevel INFO')
		arg(line: '-treeLogger')
		arg(line: '-style PRETTY')
		arg(value: gwtApplicationName)
		classpath {
			pathElement(location: sourceDir)
				pathElement(path: configurations.compile.asPath)
				pathElement(path: configurations.gwtCompile.asPath)
			}
		}
	}

}

war.dependsOn gwtCompile

task serverSideJar(type: Jar) {
	baseName = 'gwtViewers_server'
	fileSet(dir:sourceSets.main.classesDir)
}

artifacts {
	archives serverSideJar
}



